-- -------------------------------------------------------------
-- 
-- File Name: C:\Users\Mahsa\Desktop\Th1008_Code\tanh_vhld_piecewise_linear\codegen\vhdl_approximate_tanh_design\hdlsrc\vhdl_approximate_tanh_design_fixpt.vhd
-- Created: 2021-08-21 19:45:46
-- 
-- Generated by MATLAB 9.8, MATLAB Coder 5.0 and HDL Coder 3.16
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: vhdl_approximate_tanh_design_fixpt
-- Source Path: vhdl_approximate_tanh_design_fixpt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.vhdl_approximate_tanh_design_fixpt_pkg.ALL;

ENTITY vhdl_approximate_tanh_design_fixpt IS
  PORT( x                                 :   IN    vector_of_std_logic_vector14(0 TO 125);  -- sfix14_En10 [126]
        y_out                             :   OUT   vector_of_std_logic_vector14(0 TO 125)  -- sfix14_En13 [126]
        );
END vhdl_approximate_tanh_design_fixpt;


ARCHITECTURE rtl OF vhdl_approximate_tanh_design_fixpt IS

  -- Constants
  CONSTANT One                            : real := 
    2.0;  -- double
  CONSTANT C_divbyzero_p                  : real := 
    1.0E+308;  -- double

  -- Functions
  -- HDLCODER_TO_SIGNED
  FUNCTION hdlcoder_to_signed(arg: real; width: integer) RETURN signed IS
  BEGIN
    RETURN to_signed(integer(arg), width);
  END FUNCTION;


  -- Signals
  SIGNAL x_signed                         : vector_of_signed14(0 TO 125);  -- sfix14_En10 [126]
  SIGNAL y_out_tmp                        : vector_of_signed14(0 TO 125);  -- sfix14_En13 [126]

BEGIN
  outputgen1: FOR k1 IN 0 TO 125 GENERATE
    x_signed(k1) <= signed(x(k1));
  END GENERATE;

  vhdl_approximate_tanh_design_fixpt_1_output : PROCESS (x_signed)
    VARIABLE y : vector_of_signed32(0 TO 125);
    VARIABLE y_0 : vector_of_signed32(0 TO 125);
    VARIABLE b : vector_of_signed32(0 TO 125);
    VARIABLE z1 : vector_of_signed32(0 TO 125);
    VARIABLE tmp : signed(31 DOWNTO 0);
    VARIABLE cast : vector_of_real(0 TO 125);
    VARIABLE div_temp : vector_of_real(0 TO 125);
    VARIABLE mul_temp : vector_of_signed29(0 TO 125);
    VARIABLE cast_0 : vector_of_signed28(0 TO 125);
    VARIABLE cast_1 : vector_of_signed28(0 TO 125);
    VARIABLE cast_2 : vector_of_unsigned32(0 TO 125);
    VARIABLE sll_temp : vector_of_unsigned32(0 TO 125);
    VARIABLE add_temp : vector_of_signed33(0 TO 125);
    VARIABLE sub_temp : vector_of_signed33(0 TO 125);
    VARIABLE cast_3 : vector_of_signed32(0 TO 125);
  BEGIN
    tmp := to_signed(16#00000000#, 32);
    --HDL code generation from MATLAB function: vhdl_approximate_tanh_design_fixpt
    --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    --                                                                          %
    --           Generated by MATLAB 9.8 and Fixed-Point Designer 7.0           %
    --                                                                          %
    --%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    FOR k IN 0 TO 125 LOOP
      mul_temp(k) := to_signed(16#2A00#, 15) * x_signed(k);
      cast_0(k) := mul_temp(k)(27 DOWNTO 0);
      cast_1(k) := resize(cast_0(k)(27 DOWNTO 22), 28);
      y(k) := resize(cast_1(k), 32);
      IF y(k) > to_signed(16#0000001E#, 32) THEN 
        tmp := to_signed(16#7FFFFFFF#, 32);
      ELSE 
        IF y(k)(31) = '1' THEN 
          cast_2(k) := X"00000000";
        ELSE 
          cast_2(k) := unsigned(y(k));
        END IF;
        sll_temp(k) := to_unsigned(16#00000001#, 32) sll to_integer(cast_2(k));
        IF sll_temp(k)(31) /= '0' THEN 
          tmp := X"7FFFFFFF";
        ELSE 
          tmp := signed(sll_temp(k));
        END IF;
      END IF;
      y_0(k) := tmp;
      add_temp(k) := resize(y_0(k), 33) + to_signed(1, 33);
      IF (add_temp(k)(32) = '0') AND (add_temp(k)(31) /= '0') THEN 
        b(k) := X"7FFFFFFF";
      ELSIF (add_temp(k)(32) = '1') AND (add_temp(k)(31) /= '1') THEN 
        b(k) := X"80000000";
      ELSE 
        b(k) := add_temp(k)(31 DOWNTO 0);
      END IF;
      cast(k) := real(to_integer(b(k)));
      IF cast(k) = 0.0 THEN 
        div_temp(k) := C_divbyzero_p;
      ELSE 
        div_temp(k) := One / cast(k);
      END IF;
      z1(k) := hdlcoder_to_signed(div_temp(k), 32);
      sub_temp(k) := to_signed(1, 33) - resize(z1(k), 33);
      IF (sub_temp(k)(32) = '0') AND (sub_temp(k)(31) /= '0') THEN 
        cast_3(k) := X"7FFFFFFF";
      ELSIF (sub_temp(k)(32) = '1') AND (sub_temp(k)(31) /= '1') THEN 
        cast_3(k) := X"80000000";
      ELSE 
        cast_3(k) := sub_temp(k)(31 DOWNTO 0);
      END IF;
      y_out_tmp(k) <= signed'(cast_3(k)(0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0');
    END LOOP;

  END PROCESS vhdl_approximate_tanh_design_fixpt_1_output;


  outputgen: FOR k1 IN 0 TO 125 GENERATE
    y_out(k1) <= std_logic_vector(y_out_tmp(k1));
  END GENERATE;

END rtl;

